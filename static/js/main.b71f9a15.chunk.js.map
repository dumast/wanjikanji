{"version":3,"sources":["Components/Home.jsx","Components/Back.jsx","Components/Lessons.jsx","SVG/Arrow1.svg","SVG/Arrow2.svg","Components/Card.jsx","Components/Hub.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","to","className","href","target","Back","history","useHistory","onClick","goBack","Lessons","buttons","i","push","map","item","pathname","state","lesson","Card","props","cdnMatch","location","useLocation","lessonnum","type","family","useState","data","setData","count","setCount","useEffect","fetch","headers","then","response","json","getData","kanji","length","kana","romaji","src","alt","toString","match","replace","flipOnHover","flipOnClick","flipDirection","Arrow1","Arrow2","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","Hub","class","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b71f9a15.chunk.js","sourcesContent":["import React from 'react'\nimport { \n    Link\n  } from 'react-router-dom'; \n\nexport default function Home() {\n    return(\n        <div>\n            <h1>Wanji-Kanji</h1>\n                <Link to = \"/Lessons\"><button className = 'lessons'>Lessons</button></Link>\n            <h6 className = \"wanikani\"><a href = \"https://wanikani.com\" target=\"_blank\">WaniKani.com</a> (non affiliated)</h6>\n        </div>\n    )\n}","import React from 'react'\nimport {\n    useHistory\n  } from 'react-router-dom'; \n\nexport default function Back() {\n    const history = useHistory()\n    return(\n        <div>\n            <button className = \"back\" onClick={() => {history.goBack()}}>\n                &lt; Back\n            </button>\n            \n        </div>\n    )\n}","import React from 'react'\nimport Back from './Back'\nimport {\n    Link\n  } from 'react-router-dom'; \n\nexport default function Lessons() {\n    let buttons = []\n    let i = 0;\n    for(i = 1; i<61; i++){\n        buttons.push(i)\n    }\n    return(\n        <div>\n            <p className = \"nav\">Wanji-Kanji &gt; Lessons</p>\n            <div className = \"grid-container\">\n                {buttons.map((item) => {\n                    return(\n                    <Link to = {{\n                        pathname:`Hub`,\n                        state: {lesson: {item}}\n                    }}><button className = \"lesson\">Lesson {item}</button></Link>\n                        \n                    )\n                })}\n            </div>\n            <Back/>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/Arrow1.60207f40.svg\";","export default __webpack_public_path__ + \"static/media/Arrow2.893451a7.svg\";","import React, { useEffect, useState } from 'react';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport Back from './Back';\nimport {useLocation} from \"react-router-dom\";\nimport Arrow1 from  '../SVG/Arrow1.svg'\nimport Arrow2 from '../SVG/Arrow2.svg'\n\nexport default function Card(props){\n    \n    const imgMatch = /<img .*>/i;\n    const cdnMatch = /src=\".*\"/i;\n\n    let location = useLocation();\n\n    const lessonnum = location.state.lessonnum.lessonnum\n    const type = location.state.family\n\n    const [data,setData] = useState([]);\n    const [count,setCount] = useState(0);\n\n    const getData = (type, lessonnum) => {\n    fetch(`./resources/${type}_${lessonnum}.json`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then((response) => {\n      return response.json();\n    }).then((response) => {\n      setData(response);\n    })\n    }\n\n    useEffect(() => {\n        getData(type, lessonnum)\n    }, [type, lessonnum])    \n\n    function shuffle(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n      \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n      \n          // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n      \n        return array;\n      }\n\n    const kanji = data && data.length > 0 && data[count].kanji\n    const kana = data && data.length > 0 && data[count].kana\n    const romaji = data && data.length > 0 && data[count].romaji\n\n    let src = null\n    let alt = null\n    if(kanji.toString().match(imgMatch)){\n        src = kanji.toString().match(cdnMatch)[0].match(/\".*\"/)[0].replace(/\"/g, \"\")\n        alt = kanji.toString().replace(cdnMatch, \"\").match(/alt=\".*\"/)[0].match(/\".*\"/)[0].replace(/\"/g, \"\");\n    }\n\n    return(\n        <div className = \"card\">\n        <p className = \"nav\">Wanji-Kanji &gt; Lessons &gt; Lesson {lessonnum} &gt; {type} {count+1} / {data.length}</p>\n        <div className = {type}>\n            <Flippy\n                flipOnHover={false} // default false\n                flipOnClick={true} // default false\n                flipDirection=\"horizontal\" // horizontal or vertical}\n            >\n                <FrontSide\n                    >\n                        {src ? <img className=\"kanji\" src={src} alt={alt}/> : <span className = \"kanji\">{kanji}</span>}\n                  \n                </FrontSide>\n                <BackSide>\n                    <span className = \"kanji\">{kana}</span> \n                    <span> {romaji}</span>\n                </BackSide>\n            </Flippy>\n            <img onClick = {() => {\n                if(count===0){\n                    setCount(0) \n                }\n                else{\n                setCount(count - 1)}}\n            }className = \"previous\" src={Arrow1} alt=\"back-button\"></img>\n            <img onClick = {() => {\n                if(count===data.length-1){\n                    setCount(data.length-1) \n                }\n                else{\n                setCount(count + 1)}}\n            }className = \"next\" src={Arrow2} alt=\"forward-button\"></img>\n            <button className = \"first\" onClick={()=> setCount(0)}>First</button>\n            <button className = \"last\" onClick={()=> setCount(data.length-1)}>Last</button>\n            <button className = \"shuffle\" onClick = {()=> {\n                setData(shuffle(data))\n                count!== 0?setCount(0):setCount(1)\n                }}>Shuffle</button>\n            <Back/>\n        </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport Back from './Back'\nimport { \n    Link,\n    useLocation\n  } from 'react-router-dom'; \n\nexport default function Hub(){\n    let location = useLocation();\n    const lessonnum = location.state.lesson.item\n    return(\n        <div>\n            <p className = \"nav\">Wanji-Kanji &gt; Lessons &gt; Lesson {lessonnum}</p>\n            <div className = \"container\">\n                <Link to = {{\n                    pathname:'/Card',\n                    state: {lessonnum: {lessonnum}, family: 'radicals'},\n                    }}> \n                    <button class=\"hub rad\">Radicals</button></Link>\n                <Link to = {{\n                    pathname:'/Card',\n                    state: {lessonnum: {lessonnum}, family: 'kanjis'},\n                    }}>\n                    <button class=\"hub kan\">Kanjis</button></Link>\n                <Link to = {{\n                    pathname:'/Card',\n                    state: {lessonnum: {lessonnum}, family: 'vocab'},\n                    }}>\n                    <button class=\"hub voc\">Vocabulary</button></Link>\n            </div>\n            <Back/>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Home from './Components/Home'\nimport Lessons from './Components/Lessons'\nimport Card from './Components/Card'\nimport Hub from './Components/Hub'\nimport { \n  BrowserRouter as Router, \n  Route, \n  Switch \n} from 'react-router-dom'; \n\n\nfunction App() {\n  //random variables declaration, to select a random radical / kanji / vocab from the whole 60 levels\n\n\n  //random number in list\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path='/' component = {Home}></Route> \n          <Route path='/Lessons' component = {Lessons}></Route>\n          <Route path=\"/Hub\" component = {Hub}></Route>\n          <Route path='/Card' component = {Card}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}